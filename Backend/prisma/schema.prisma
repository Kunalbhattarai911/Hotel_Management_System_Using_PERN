// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SuperAdmin {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  isSuperAdmin Boolean  @default(true)
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt

  @@unique([isSuperAdmin])
}

enum Status {
  Pending
  Accept
  Reject
}

model Admin {
  id          String   @id @default(uuid())
  firstName   String
  middleName  String?
  lastName    String
  email       String   @unique
  password    String
  location    String
  age         Int
  phoneNumber String
  status      Status   @default(Pending)
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt

  Hotel Hotel[]
}

model User {
  id          String   @id @default(uuid())
  fullName    String
  email       String   @unique
  password    String
  location    String
  phoneNumber String
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt
}

model Hotel {
  id        String   @id @default(uuid())
  name      String
  location  String
  rating    Float?
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   String
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  Room Room[]
}

enum BedType {
  Single
  Double
  Queen
  King
  Twin
}

model Room {
  id            String   @id @default(uuid())
  roomNumber    String   @unique
  bedType       BedType
  pricePerNight Float
  hotelId       String
  hotel         Hotel    @relation(fields: [hotelId], references: [id])
  CreatedAt     DateTime @default(now())
  UpdatedAt     DateTime @updatedAt
}
